{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Xray Core Configuration Schema",
  "description": "Schema for Xray core configuration file",
  "required": ["inbound", "outbound"],
  "definitions": {
    "address": {
      "oneOf": [
        { "type": "string", "format": "ipv4" },
        { "type": "string", "format": "ipv6" },
        { "type": "string", "format": "hostname" }
      ]
    },
    "port": {
      "oneOf": [
        { "type": "integer", "minimum": 0, "maximum": 65535 },
        { "type": "string", "pattern": "^[0-9]{1,5}$" }
      ]
    },
    "transportProtocol": {
      "type": "string",
      "enum": ["tcp", "udp", "mkcp", "websocket", "http", "domainsocket", "quic"]
    },
    "inboundProtocol": {
      "type": "string",
      "enum": [
        "dokodemo-door",
        "http",
        "socks",
        "vmess",
        "vless",
        "trojan",
        "shadowsocks",
        "dns"
      ]
    },
    "outboundProtocol": {
      "type": "string",
      "enum": [
        "blackhole",
        "dns",
        "freedom",
        "http",
        "socks",
        "vmess",
        "vless",
        "trojan",
        "shadowsocks",
        "loopback"
      ]
    },
    "vmessSettings": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "alterId": { "type": "integer" },
              "security": { 
                "type": "string",
                "enum": ["auto", "none", "aes-128-gcm", "chacha20-poly1305"]
              },
              "level": { "type": "integer" }
            }
          }
        },
        "default": {
          "type": "object",
          "properties": {
            "level": { "type": "integer" },
            "alterId": { "type": "integer" }
          }
        },
        "detour": {
          "type": "object",
          "properties": {
            "to": { "type": "string" }
          }
        }
      }
    },
    "vlessSettings": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "level": { "type": "integer" },
              "flow": { 
                "type": "string",
                "enum": ["xtls-rprx-direct", "xtls-rprx-origin"]
              }
            }
          }
        },
        "decryption": { "type": "string" },
        "fallbacks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "alpn": { "type": "string" },
              "path": { "type": "string" },
              "dest": { "type": "string" },
              "xver": { "type": "integer" }
            }
          }
        }
      }
    },
    "trojanSettings": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "password": { "type": "string" },
              "email": { "type": "string" },
              "level": { "type": "integer" }
            }
          }
        },
        "fallbacks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "alpn": { "type": "string" },
              "path": { "type": "string" },
              "dest": { "type": "string" },
              "xver": { "type": "integer" }
            }
          }
        }
      }
    },
    "shadowsocksSettings": {
      "type": "object",
      "properties": {
        "method": { 
          "type": "string",
          "enum": ["aes-256-gcm", "aes-128-gcm", "chacha20-poly1305", "none"]
        },
        "password": { "type": "string" },
        "level": { "type": "integer" },
        "network": { "type": "string" }
      }
    },
    "sockoptSettings": {
      "type": "object",
      "properties": {
        "mark": { "type": "integer" },
        "tcpFastOpen": { "type": "boolean" },
        "tproxy": { 
          "type": "string",
          "enum": ["off", "redirect", "tproxy"]
        },
        "tcpKeepAliveInterval": { "type": "integer" }
      }
    },
    "dokodemodoorSettings": {
      "type": "object",
      "properties": {
        "address": { "$ref": "#/definitions/address" },
        "port": { "$ref": "#/definitions/port" },
        "network": { 
          "type": "string",
          "enum": ["tcp", "udp", "tcp,udp"]
        },
        "timeout": { "type": "integer" },
        "followRedirect": { "type": "boolean" },
        "userLevel": { "type": "integer" }
      }
    },
    "socksSettings": {
      "type": "object",
      "properties": {
        "auth": { 
          "type": "string",
          "enum": ["noauth", "password"]
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "user": { "type": "string" },
              "pass": { "type": "string" },
              "level": { "type": "integer" }
            }
          }
        },
        "udp": { "type": "boolean" },
        "ip": { "$ref": "#/definitions/address" },
        "userLevel": { "type": "integer" }
      }
    },
    "httpSettings": {
      "type": "object",
      "properties": {
        "timeout": { "type": "integer" },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "user": { "type": "string" },
              "pass": { "type": "string" }
            }
          }
        },
        "allowTransparent": { "type": "boolean" },
        "userLevel": { "type": "integer" }
      }
    },
    "blackholeSettings": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "type": { "type": "string" }
          }
        }
      }
    }
  },
  "properties": {
    "inbound": {
      "type": "array",
      "description": "Inbound handler configurations. Must have at least one item.",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["tag", "port", "protocol"],
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of the inbound handler. Must be unique among all inbound handlers"
          },
          "listen": {
            "$ref": "#/definitions/address",
            "description": "Address to listen on. Defaults to \"0.0.0.0\" if not specified"
          },
          "port": {
            "$ref": "#/definitions/port",
            "description": "Port to listen on"
          },
          "protocol": {
            "$ref": "#/definitions/inboundProtocol",
            "description": "Protocol name of inbound proxy"
          },
          "settings": {
            "oneOf": [
              { "$ref": "#/definitions/vmessSettings" },
              { "$ref": "#/definitions/vlessSettings" },
              { "$ref": "#/definitions/trojanSettings" },
              { "$ref": "#/definitions/shadowsocksSettings" },
              { "$ref": "#/definitions/dokodemodoorSettings" },
              { "$ref": "#/definitions/httpSettings" },
              { "$ref": "#/definitions/socksSettings" }
            ]
          },
          "stream_settings": {
            "type": "object",
            "properties": {
              "network": {
                "$ref": "#/definitions/transportProtocol"
              },
              "security": {
                "type": "string",
                "enum": ["none", "tls"]
              },
              "tlsSettings": {
                "type": "object",
                "properties": {
                  "serverName": { "type": "string" },
                  "certificates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "certificateFile": { "type": "string" },
                        "keyFile": { "type": "string" },
                        "certificate": { "type": "array", "items": { "type": "string" } },
                        "key": { "type": "array", "items": { "type": "string" } }
                      }
                    }
                  }
                }
              },
              "wsSettings": {
                "type": "object",
                "properties": {
                  "path": { "type": "string" },
                  "headers": { "type": "object" }
                }
              }
            }
          },
          "sniffing": {
            "type": "object",
            "properties": {
              "enabled": { "type": "boolean" },
              "destOverride": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["http", "tls"]
                }
              }
            }
          },
          "sockopt": { "$ref": "#/definitions/sockoptSettings" }
        }
      }
    },
    "outbound": {
      "type": "array",
      "description": "Outbound handler configurations. Must have at least one item. The first item is used as default for routing.",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["tag", "protocol"],
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of this outbound handler"
          },
          "protocol": {
            "$ref": "#/definitions/outboundProtocol",
            "description": "Protocol name of outbound proxy"
          },
          "settings": {
            "oneOf": [
              { "$ref": "#/definitions/vmessSettings" },
              { "$ref": "#/definitions/vlessSettings" },
              { "$ref": "#/definitions/trojanSettings" },
              { "$ref": "#/definitions/shadowsocksSettings" },
              { "$ref": "#/definitions/httpSettings" },
              { "$ref": "#/definitions/socksSettings" },
              { "$ref": "#/definitions/blackholeSettings" },
              {
                "type": "object",
                "properties": {
                  "domainStrategy": {
                    "type": "string",
                    "enum": ["AsIs", "UseIP", "UseIPv4", "UseIPv6"]
                  },
                  "redirect": { "type": "string" },
                  "userLevel": { "type": "integer" }
                }
              }
            ]
          },
          "stream_settings": {
            "type": "object",
            "properties": {
              "network": {
                "$ref": "#/definitions/transportProtocol"
              },
              "security": {
                "type": "string",
                "enum": ["none", "tls"]
              },
              "tlsSettings": {
                "type": "object",
                "properties": {
                  "serverName": { "type": "string" },
                  "allowInsecure": { "type": "boolean" }
                }
              }
            }
          },
          "expire": {
            "type": "integer",
            "description": "If not zero, this outbound will be expired in seconds",
            "minimum": 0
          },
          "comment": {
            "type": "string",
            "description": "Comment of this outbound handler"
          },
          "sockopt": { "$ref": "#/definitions/sockoptSettings" }
        }
      }
    },
    "routing": {
      "type": "object",
      "properties": {
        "domainStrategy": {
          "type": "string",
          "enum": ["AsIs", "IPIfNonMatch", "IPOnDemand"]
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "domain": { 
                "type": "array",
                "items": { "type": "string" }
              },
              "ip": {
                "type": "array",
                "items": { "type": "string" }
              },
              "port": { "type": "string" },
              "network": { "type": "string" },
              "source": {
                "type": "array",
                "items": { "type": "string" }
              },
              "user": {
                "type": "array",
                "items": { "type": "string" }
              },
              "inboundTag": {
                "type": "array",
                "items": { "type": "string" }
              },
              "outboundTag": { "type": "string" },
              "protocol": {
                "type": "array",
                "items": { "type": "string" }
              }
            }
          }
        },
        "balancers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tag": { "type": "string" },
              "selector": { 
                "type": "array",
                "items": { "type": "string" }
              },
              "strategy": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "policy": {
      "type": "object",
      "properties": {
        "levels": {
          "type": "object",
          "patternProperties": {
            "^[0-9]+$": {
              "type": "object",
              "properties": {
                "handshake": { "type": "integer" },
                "connIdle": { "type": "integer" },
                "uplinkOnly": { "type": "integer" },
                "downlinkOnly": { "type": "integer" },
                "statsUserUplink": { "type": "boolean" },
                "statsUserDownlink": { "type": "boolean" },
                "bufferSize": { "type": "integer" }
              }
            }
          }
        },
        "system": {
          "type": "object",
          "properties": {
            "statsInboundUplink": { "type": "boolean" },
            "statsInboundDownlink": { "type": "boolean" },
            "statsOutboundUplink": { "type": "boolean" },
            "statsOutboundDownlink": { "type": "boolean" },
            "bufferSize": { "type": "integer" }
          }
        }
      }
    },
    "app": {
      "type": "array",
      "description": "App is for configurations of all features in Xray",
      "items": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/properties/routing" },
          { "$ref": "#/properties/dns" },
          { "$ref": "#/properties/stats" },
          { "$ref": "#/properties/policy" },
          { "$ref": "#/properties/reverse" },
          { "$ref": "#/properties/observatory" },
          {
            "type": "object",
            "properties": {
              "type": { 
                "type": "string",
                "enum": [
                  "dispatcher", 
                  "router",
                  "dns",
                  "policy",
                  "inbound",
                  "outbound",
                  "stats",
                  "reverse"
                ]
              },
              "settings": { "type": "object" }
            },
            "required": ["type"]
          }
        ]
      }
    },
    "transport": {
      "type": "object",
      "properties": {
        "tcpSettings": {
          "type": "object",
          "properties": {
            "acceptProxyProtocol": { "type": "boolean" },
            "header": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "request": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "string" },
                    "method": { "type": "string" },
                    "path": { 
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "headers": {
                      "type": "object",
                      "patternProperties": {
                        ".*": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "string" },
                    "status": { "type": "string" },
                    "reason": { "type": "string" },
                    "headers": {
                      "type": "object",
                      "patternProperties": {
                        ".*": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "kcpSettings": {
          "type": "object",
          "properties": {
            "mtu": { "type": "integer" },
            "tti": { "type": "integer" },
            "uplinkCapacity": { "type": "integer" },
            "downlinkCapacity": { "type": "integer" },
            "congestion": { "type": "boolean" },
            "writeBuffer": { "type": "integer" },
            "readBuffer": { "type": "integer" },
            "seed": { "type": "string" },
            "header": {
              "type": "object",
              "properties": {
                "type": { "type": "string" }
              }
            }
          }
        },
        "wsSettings": {
          "type": "object",
          "properties": {
            "acceptProxyProtocol": { "type": "boolean" },
            "path": { "type": "string" },
            "headers": {
              "type": "object",
              "patternProperties": {
                ".*": { "type": "string" }
              }
            }
          }
        },
        "quicSettings": {
          "type": "object",
          "properties": {
            "security": { "type": "string" },
            "key": { "type": "string" },
            "header": {
              "type": "object",
              "properties": {
                "type": { "type": "string" }
              }
            }
          }
        },
        "grpcSettings": {
          "type": "object",
          "properties": {
            "serviceName": { "type": "string" },
            "multiMode": { "type": "boolean" }
          }
        }
      }
    },
    "extension": {
      "type": "array",
      "description": "Configuration for extensions. The config may not work if corresponding extension is not loaded into Xray",
      "items": {
        "type": "object",
        "description": "Extension configuration"
      }
    },
    "stats": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "object",
          "patternProperties": {
            "^.*$": {
              "type": "object",
              "properties": {
                "value": { "type": "integer" },
                "timestamp": { "type": "integer" }
              }
            }
          }
        }
      }
    },
    "reverse": {
      "type": "object",
      "properties": {
        "bridges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tag": { "type": "string" },
              "domain": { "type": "string" }
            }
          }
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tag": { "type": "string" },
              "domain": { "type": "string" }
            }
          }
        }
      }
    },
    "dns": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "object",
          "patternProperties": {
            "^.+$": {
              "oneOf": [
                { "type": "string" },
                { "type": "array", "items": { "type": "string" } }
              ]
            }
          }
        },
        "servers": {
          "type": "array",
          "items": {
            "oneOf": [
              { "type": "string" },
              {
                "type": "object",
                "properties": {
                  "address": { "type": "string" },
                  "port": { "$ref": "#/definitions/port" },
                  "domains": { "type": "array", "items": { "type": "string" } }
                }
              }
            ]
          }
        },
        "clientIp": { "type": "string" },
        "tag": { "type": "string" },
        "queryStrategy": {
          "type": "string",
          "enum": ["UseIP", "UseIPv4", "UseIPv6"]
        },
        "disableCache": { "type": "boolean" },
        "disableFallback": { "type": "boolean" },
        "disableFallbackIfMatch": { "type": "boolean" }
      }
    },
    "log": {
      "type": "object",
      "properties": {
        "access": { "type": "string" },
        "error": { "type": "string" },
        "loglevel": {
          "type": "string",
          "enum": ["debug", "info", "warning", "error", "none"]
        }
      }
    },
    "api": {
      "type": "object",
      "properties": {
        "tag": { "type": "string" },
        "services": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "observatory": {
      "type": "object",
      "properties": {
        "subjectSelector": {
          "type": "array",
          "items": { "type": "string" }
        },
        "probeInterval": { "type": "string" },
        "probeUrl": { "type": "string" }
      }
    }
  }
}